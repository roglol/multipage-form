{"version":3,"sources":["validations/userSchema.js","actions/index.js","components/Form/input.js","components/Form/dropdown.js","components/Form/userForm.js","validations/productSchema.js","components/Form/productForm.js","components/Form/index.js","App.js","reducers/userData.js","reducers/productData.js","reducers/wizzard.js","store/index.js","reportWebVitals.js","index.js"],"names":["userSchema","yup","shape","firstName","required","shippingAddress","lastName","age","typeError","positive","integer","email","country","addUserDetail","data","type","payload","setWizzardStep","Input","value","onChange","id","label","showError","rows","multiline","TextField","variant","name","component","className","Dropdown","classes","useStyles","makeStyles","theme","root","margin","spacing","display","flexDirection","width","countrySelector","height","background","border","outline","comment","marginTop","UserForm","dispatch","useDispatch","useSelector","state","userData","handleChange","e","target","val","nextPage","a","enableReinitialize","initialValues","validationSchema","onSubmit","schema","userComment","productSchema","productName","productPrice","productSku","productQuantity","table","createData","userInfo","ProductForm","useState","editMode","setEditMode","productData","gridData","setGridData","gridHeader","setGridHeader","addProductDetail","changeUserInfo","toggleEdit","useEffect","console","log","alert","TableContainer","Paper","Table","TableHead","TableRow","TableCell","map","key","TableBody","row","IconButton","onClick","Object","keys","Form","wizzard","step","render","App","initialState","rootReducer","combineReducers","action","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.c758890f.chunk.js","sourcesContent":["import * as yup from 'yup';\n\nexport const userSchema = yup.object().shape({\n  firstName: yup.string().required('First Name is required'),\n  shippingAddress: yup.string().required('Shipping Address is required'),\n  lastName: yup.string().required('Last Name is required'),\n  age: yup.number().typeError('Age must be a number').required('Age is required').positive('Age must be a positive integer').integer('Age must be an integer'),\n  email: yup.string().email('Invalid Email').required('Email is required'),\n  country: yup.string().required('Country is required'),\n});","export const  addUserDetail = (data) =>{\n    return{\n        type:'user_detail',\n        payload:{...data}\n    }\n}\n\nexport const  addProductDetail = (data)  =>{\n    return{\n        type:'product_detail',\n        payload:{...data}\n    }\n}\n\nexport const setWizzardStep = (data) =>{\n    return{\n        type:'wizzard_step',\n        payload:data\n    }\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { ErrorMessage } from \"formik\";\n\nconst Input = ({value,onChange,id,label,showError,rows,multiline}) =>{\n    return (\n        <>\n        {!multiline ?\n        <TextField \n        label={label} \n        id={id}  \n        value={value} \n        onChange={onChange} \n        /> :\n        <TextField \n            label={label} \n            id={id}  \n            value={value} \n            onChange={onChange} \n            rows={rows} \n            multiline\n            variant='outlined'\n            />\n        }\n        {showError && <ErrorMessage name={id} component='span' className='text-danger' />}\n        </>\n    )\n}\n\n\nexport default Input;","import React from 'react';\nimport { CountryDropdown} from 'react-country-region-selector';\nimport { ErrorMessage } from \"formik\";\n\nconst Dropdown = ({value,onChange,id,showError,classes}) =>{\n    return (\n        <>\n        <CountryDropdown\n            classes={classes}\n            value={value}\n            onChange={onChange} />\n        {showError && <ErrorMessage name={id} component='span' className='text-danger' />}\n        </>\n    )\n}\n\n\nexport default Dropdown;","import React from 'react';\nimport {userSchema} from '../../validations/userSchema';\nimport { Formik, Form} from \"formik\";\nimport {useDispatch,useSelector} from 'react-redux'\nimport {addUserDetail,setWizzardStep} from '../../actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from \"./input\";\nimport Dropdown from \"./dropdown\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    '&':{\n      display:'flex',\n      flexDirection:'column',\n      width:'100%',\n      margin:'auto',\n    },\n    '& .text-danger':{\n      margin:'0px 8px'\n    }\n  },\n  countrySelector:{\n    height: '40px',\n    background: '#fff',\n    border: '1px solid rgba(0, 0, 0, 0.23)',\n    '&:focus':{\n      outline: '2px solid #3f51b5'\n    }\n  },\n  comment:{\n    marginTop:'15px'\n  }\n}));\n\nexport default function UserForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const data = useSelector(state => state.userData)\n  const selectCountry  = (val) => {\n    dispatch(addUserDetail({id:'country',val:val}))\n  }\n  const handleChange = (e) =>{\n      dispatch(addUserDetail({id:e.target.id,val:e.target.value}))\n  }\n  const nextPage = async () =>{\n    dispatch(setWizzardStep('product'))\n  }\n\n  return (\n    <div className=\"card\">\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">USER DETAILS</h5>\n    <Formik\n    enableReinitialize\n    initialValues={{...data}}\n    validationSchema={userSchema}\n    onSubmit={async () =>{\n       nextPage()\n    }}\n    >     \n        <Form className={classes.root}>\n        <Input\n        label=\"First Name\"\n        id=\"firstName\"\n        value={data.firstName}\n        onChange={handleChange}\n        schema={userSchema}\n        showError={true}\n        />\n        <Input\n        label=\"Last Name\"\n        id=\"lastName\"\n        value={data.lastName}\n        onChange={handleChange}\n        schema={userSchema}\n        showError={true}\n        />\n        <Input\n        label=\"Age\"\n        id=\"age\"\n        value={data.age}\n        onChange={handleChange}\n        schema={userSchema}\n        showError={true}\n        />\n        <Input\n        label=\"Email\"\n        id=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        schema={userSchema}\n        showError={true}\n        />\n        <Input\n        label=\"Shipping Address\"\n        id=\"shippingAddress\"\n        value={data.shippingAddress}\n        onChange={handleChange}\n        schema={userSchema}\n        showError={true}\n        />\n        <Input\n        label=\"Suggestions or Comment\"\n        id=\"userComment\"\n        value={data.userComment}\n        rows={4}\n        multiline={true}\n        onChange={handleChange}\n        schema={userSchema}\n        showError={false}\n        />\n        <Dropdown\n        id={'country'}\n        classes={classes.countrySelector}\n        value={data.country}\n        showError={true}\n        onChange={selectCountry}\n        />\n            <div className='d-flex justify-content-end'>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Next\n            </button>\n            </div>\n      </Form>\n    </Formik>\n  </div>\n</div>\n\n  );\n}","import * as yup from 'yup';\n\nexport const productSchema = yup.object().shape({\n  productName: yup.string().required('Name is required'),\n  productPrice: yup.number().typeError('Price must be a number').required('Price is required').positive('Price must be a positive integer').integer('Price must be an integer'),\n  productSku: yup.string().required('Sku is required'),\n  productQuantity: yup.number().typeError('Quantity must be a number').required('Number is required').positive('Number must be a positive integer').integer('Number must be an integer'),\n});","import React,{useEffect,useState} from 'react';\nimport { Formik, Form} from \"formik\";\nimport {productSchema} from '../../validations/productSchema';\nimport {userSchema} from '../../validations/userSchema';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useDispatch,useSelector} from 'react-redux'\nimport {addProductDetail,addUserDetail} from '../../actions';\nimport Input from \"./input\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    '&':{\n      display:'flex',\n      flexDirection:'column',\n      width:'100%',\n      margin:'auto',\n    }\n  },\n  table:{\n      '&': {\n          width:'auto',\n          marginTop:'15px'\n      }\n  }\n}));\nfunction createData(userInfo) {\n    const { firstName,lastName,age,email,country,shippingAddress} = userInfo\n    return { firstName,lastName,age,email,country,shippingAddress}\n}\nfunction createHeader() {\n  return[\n    'First Name',\n    'Last Name',\n    'Age',\n    'Email',\n    'Country',\n    'Shipping Address'\n  ]\n}\nexport default function ProductForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const [editMode,setEditMode] = useState(false)\n  const data = useSelector(state => state.productData)\n  const userInfo = useSelector(state => state.userData)\n  const [gridData,setGridData] = useState([])\n  const [gridHeader,setGridHeader] = useState([])\n\n  const handleChange = (e) =>{\n    dispatch(addProductDetail({id:e.target.id,val:e.target.value}))\n}\nconst changeUserInfo = (e) =>{\n  dispatch(addUserDetail({id:e.target.id,val:e.target.value}))\n}\n  const toggleEdit = () =>{\n    setEditMode(!editMode)\n  }\nuseEffect(() => {\n     setGridHeader(createHeader())\n     setGridData([createData(userInfo)])\n  },[userInfo]);\n  return (\n    <div className=\"card\">\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">PRODUCT DETAILS</h5>\n    <Formik\n    enableReinitialize\n    initialValues={{...data}}\n    validationSchema={productSchema}\n    onSubmit={async () =>{\n       console.log(userInfo)\n       alert('submitted successfully')\n    }}\n    >   \n    <Form className={classes.root}>\n    <Input\n        label=\"Name\"\n        id=\"productName\"\n        value={data.productName}\n        onChange={handleChange}\n        schema={productSchema}\n        showError={true}\n      />\n        <Input\n        label=\"Price\"\n        id=\"productPrice\"\n        value={data.productPrice}\n        onChange={handleChange}\n        schema={productSchema}\n        showError={true}\n      />\n        <Input\n        label=\"Quantity\"\n        id=\"productQuantity\"\n        value={data.productQuantity}\n        onChange={handleChange}\n        schema={productSchema}\n        showError={true}\n      />\n        <Input\n        label=\"SKU\"\n        id=\"productSku\"\n        value={data.productSku}\n        onChange={handleChange}\n        schema={productSchema}\n        showError={true}\n      />\n      <TableContainer component={Paper}  className={classes.table} >\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n          <TableCell/>\n              {gridHeader.map(function(val, key) {\n                return <TableCell key={key}>{val}</TableCell>\n              })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {gridData.map((row,key) => {\n            return <TableRow key={key}>\n              <TableCell>\n              {editMode ? (\n                  <>\n                    <IconButton\n                      aria-label=\"done\"\n                      onClick={() => toggleEdit()}\n                    >\n                      <DoneIcon />\n                    </IconButton>\n                  </>\n                ) : (\n                  <IconButton\n                    aria-label=\"edit\"\n                    onClick={() => toggleEdit()}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                )}\n              </TableCell>\n              {Object.keys(row).map(function(val,key){\n              return editMode ?\n              <TableCell key={key}>\n              <Input\n              id={val}\n              value={row[val]}\n              onChange={changeUserInfo}\n              schema={userSchema}\n              // showError={true}\n            /> \n            </TableCell>\n            :\n              <TableCell key={key}>{row[val]}</TableCell>\n              })}\n            </TableRow>\n           })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <div className='d-flex justify-content-end'>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            </div>\n    </Form>\n    </Formik>\n  </div>\n</div>\n\n  );\n}","import React from 'react';\nimport {useSelector} from 'react-redux'\nimport UserForm from './userForm';\nimport ProductForm from './productForm';\n\n\nexport default function Form() {\nconst data = useSelector(state => state.wizzard)\n    const render = () =>{\n        const {step} = data\n        switch(step) {\n            case 'user':\n              return <UserForm/>\n            case 'product':\n              return <ProductForm/>\n            default:\n              return null\n          }\n    }\n\n  return (\n    <div className='container wrapper'>\n      {render()}\n    </div>\n  );\n}","import Form from './components/Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    firstName:'',\n    lastName:'',\n    age:'',\n    email:'',\n    country:'',\n    shippingAddress:'',\n    userComment:''\n}\n\nexport const userData = (state=initialState,action) =>{\n    switch(action.type){\n     case 'user_detail': \n     const {payload:{id,val}} = action\n     return {...state,[id]:val}\n     default: return state\n    }\n}","const initialState = {\n     productName:'',\n     productPrice:'',\n     productQuantity:'',\n     productSku:''\n}\n\nexport const productData = (state=initialState,action) =>{\n    switch(action.type){\n     case 'product_detail': \n     const {payload:{id,val}} = action\n     return {...state,[id]:val}\n     default: return state\n    }\n}","const initialState = {\n    step:'user',\n}\n\nexport const wizzard = (state=initialState,action) =>{\n    switch(action.type){\n     case 'wizzard_step': \n     return {...state,step:action.payload}\n     default: return state\n    }\n}","import {combineReducers,createStore} from 'redux';\nimport {userData} from '../reducers/userData';\nimport {productData} from '../reducers/productData';\nimport {wizzard} from '../reducers/wizzard';\n\nconst rootReducer = combineReducers({\n    userData,\n    productData,\n    wizzard\n})\n\nexport default createStore(rootReducer)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}